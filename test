

-- Config
local Config = {
    enabled = false,
}

-- Function to send a message to the chat
local function sendChatMessageToChatBot(player, message)
    local prefix = "[ThunderBot]"
    local fullMessage = prefix .. " " .. message

    -- Fire the SayMessageRequest event to send the message to the chat
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(fullMessage, "All")
end

-- Chatbot script
local Tab = Window.NewTab("Text")
local Section = Tab.NewSection("Text")

local chatBotEnabled = false
local chatBotPrefix = "!"

Section.NewToggle("Chatbot", function(bool)
    chatBotEnabled = bool
end)

-- Table of intents and their corresponding responses
local chatResponses = {
    greetings = {
        "Hi, how are you?",
        "Hello!",
        "Hey there!",
        "Greetings!",
        "Hi, it's nice to see you!",
        "Hello, how can I assist you today?",
        "Hey, what's up?",
        "Hi there, how's your day going?",
        "Hello! How may I help you?",
        "Hey, nice to chat with you!",
    },
    how_are_you = {
        "I'm doing well, thank you! How can I assist you?",
        "Feeling great! How can I help?",
        "I'm good, thanks for asking!",
        "I'm fine, what about you?",
        "I'm great, ready to chat!",
        "I'm doing fine, let's talk!",
        "I'm feeling wonderful today!",
        "I'm doing well, ready to assist!",
        "I'm doing just fine, thank you!",
        "I'm good, let's have a conversation!",
    },
    name = {
        "My name is ThunderBot.",
        "I'm ThunderBot, nice to meet you!",
        "Call me ThunderBot!",
        "You can call me ThunderBot.",
        "Hi, I'm ThunderBot!",
        "I go by the name ThunderBot!",
        "Greetings! I'm ThunderBot!",
        "Nice to meet you, I'm ThunderBot.",
        "I am ThunderBot, your chat companion.",
        "ThunderBot here, how may I assist you?",
    },
    sad = {
        "I'm sorry to hear that. Is there anything I can do to make you feel better?",
        "I'm here for you. Let's talk and try to cheer you up!",
        "Remember, tough times don't last. Stay strong!",
        "It's okay to feel sad sometimes. Take your time.",
        "I'm here to listen and support you.",
        "Feeling sad is normal. Let's talk about it.",
        "Sadness is a natural emotion. You're not alone.",
        "Take your time to process your feelings.",
        "Remember, you are not defined by your emotions.",
        "I'm here to lend an ear. Share your thoughts.",
    },
    happy = {
        "That's wonderful to hear! Keep spreading positivity!",
        "Great to know you're happy! Share the happiness with others too!",
        "Happiness is contagious! Keep smiling!",
        "Keep the good vibes coming!",
        "Your happiness brings joy to everyone around.",
        "Stay happy and keep shining!",
        "Happiness is a choice, and you've made it!",
        "Happiness is the key to a beautiful life!",
        "Your smile is contagious. Keep it up!",
        "Happiness is the best accessory you can wear!",
    },
    bored = {
        "Boredom is an opportunity to try something new. What interests you?",
        "Let's find something fun to do together!",
        "Boredom is the mother of creativity. Let's explore new ideas!",
        "Feeling bored? Let's turn it around and have some fun!",
        "When you're bored, your imagination can take you anywhere!",
        "Boredom is the perfect time for self-discovery.",
        "Boredom is a signal that it's time for an adventure!",
        "Embrace boredom as a chance to relax and recharge.",
        "Feeling bored? Let's spark your curiosity!",
        "Use boredom as a chance to relax and unwind.",
    },
    stressed = {
        "Take a deep breath and try to relax. Everything will be okay!",
        "Remember to take breaks and care for yourself.",
        "Stress is temporary. You've got this!",
        "Focus on the positive and take one step at a time.",
        "When things get tough, take a moment to breathe.",
        "You are strong enough to handle any challenge.",
        "Stress is a reminder to prioritize self-care.",
        "Give yourself permission to rest and recover.",
        "Stay calm and remember that you are resilient.",
        "I'm here to help you manage your stress.",
    },
    lonely = {
        "Remember that you're not alone. There are people who care about you.",
        "Reach out to friends or family to connect.",
        "I'm here to keep you company!",
        "You've got a friend in me!",
        "Even in moments of loneliness, know that you are loved.",
        "Feeling lonely? Let's chat and keep you company.",
        "You're never alone with me around!",
        "Loneliness is temporary. Let's talk and connect.",
        "I'm here to listen and provide companionship.",
        "Know that you are valued and cherished.",
    },
    idk = {
        "That's okay! It's fine not to know everything.",
        "It's alright to say 'I don't know.' We can learn together!",
        "Sometimes, it's better to explore and find the answers.",
        "Don't worry! We'll figure it out together.",
        "The quest for knowledge is a lifelong journey.",
        "There's no shame in saying 'I don't know.'",
        "Curiosity drives us to seek new information.",
        "Saying 'I don't know' is a step towards learning.",
        "Let's embrace the mystery and explore together!",
        "Not knowing opens the door to new discoveries.",
    },
    lol = {
        "Haha! You've got a great sense of humor!",
        "Laughter is the best medicine! Keep spreading the joy.",
        "LOL! You always know how to make me smile!",
        "Thanks for the laughter! It brightens up the day.",
        "Your humor brings joy to those around you.",
        "Laughing together creates strong bonds.",
        "Humor is a powerful tool for lifting spirits.",
        "A good laugh is the best stress-reliever!",
        "Keep the laughter coming, it's contagious!",
        "Your humor brings sunshine to the world.",
    },
    why = {
        "Asking 'why' can lead to new discoveries. Let's find out together!",
        "The answer to 'why' might not always be clear, but let's explore!",
        "Sometimes, 'why' leads to amazing insights. Let's delve deeper.",
        "Good question! 'Why' can unlock new knowledge.",
        "Curiosity is the key to understanding 'why'.",
        "Keep asking 'why' to uncover the mysteries.",
        "The quest for answers begins with 'why'.",
        "Every 'why' opens a new door to knowledge.",
        "Asking 'why' is the start of a learning journey.",
        "Keep questioning and seeking answers!",
    },
    help = {
        "I'm here to assist! What do you need help with?",
        "I'm always ready to lend a hand. How can I help?",
        "Help is just a message away. Let me know what you need!",
        "Don't hesitate to ask for help. I'm here for you.",
        "Assistance is on the way! What can I do for you?",
        "Helping others is what I do best. What's the problem?",
        "I'm here to support you. How can I be of service?",
        "You're not alone. I'm here to help and listen.",
        "When you need help, count on me to assist!",
        "Helping you is my top priority. Let's solve it together!",
    },
    what_are_you = {
        "I am ThunderBot, a friendly chatbot here to talk with you!",
        "I'm an AI chatbot designed by Thunder. Let's have a chat!",
        "Greetings! I am ThunderBot, your conversational companion.",
        "I'm not human, but I'm here to keep you company!",
        "I'm a virtual assistant designed to engage in conversation.",
        "I'm not a real person, but I'm here to chat with you!",
        "I'm an AI designed to interact and respond to your messages.",
        "I'm a friendly AI companion here to talk with you.",
        "I may not be human, but I'm here to have meaningful conversations.",
        "Hello! I'm ThunderBot, ready to engage in a chat with you.",
    },
}

-- Table of opposite prompts for each feeling prompt
local oppositePrompts = {
    happy = "sad",
    sad = "happy",
    bored = "excited",
    stressed = "relaxed",
    lonely = "connected",
    excited = "bored",
    relaxed = "stressed",
    connected = "lonely",
    good = "bad",
    bad = "good",
}

-- Function to handle chat messages from all players
local function onChatted(player, message)
    if chatBotEnabled then
        local lowercaseMessage = string.lower(message)
        if lowercaseMessage:sub(1, 1) == chatBotPrefix then
            local command = lowercaseMessage:sub(2)
            local response = nil

            -- Check for specific intents
            if string.find(command, "hello", 1, true) then
                response = chatResponses.greetings[math.random(1, #chatResponses.greetings)]
            elseif string.find(command, "how are you", 1, true) then
                response = chatResponses.how_are_you[math.random(1, #chatResponses.how_are_you)]
            elseif string.find(command, "name", 1, true) then
                response = chatResponses.name[math.random(1, #chatResponses.name)]
            elseif string.find(command, "sad", 1, true) then
                response = chatResponses.sad[math.random(1, #chatResponses.sad)]
            elseif string.find(command, "happy", 1, true) then
                response = chatResponses.happy[math.random(1, #chatResponses.happy)]
            elseif string.find(command, "bored", 1, true) then
                response = chatResponses.bored[math.random(1, #chatResponses.bored)]
            elseif string.find(command, "stress", 1, true) then
                response = chatResponses.stressed[math.random(1, #chatResponses.stressed)]
            elseif string.find(command, "lonely", 1, true) then
                response = chatResponses.lonely[math.random(1, #chatResponses.lonely)]
            elseif string.find(command, "excited", 1, true) then
                response = chatResponses.excited[math.random(1, #chatResponses.excited)]
            elseif string.find(command, "relax", 1, true) then
                response = chatResponses.relaxed[math.random(1, #chatResponses.relaxed)]
            elseif string.find(command, "connect", 1, true) then
                response = chatResponses.connected[math.random(1, #chatResponses.connected)]
            elseif string.find(command, "good", 1, true) then
                response = chatResponses.good[math.random(1, #chatResponses.good)]
            elseif string.find(command, "bad", 1, true) then
                response = chatResponses.bad[math.random(1, #chatResponses.bad)]
            elseif string.find(command, "not", 1, true) then
                -- Check for opposite prompts
                for feeling, opposite in pairs(oppositePrompts) do
                    if string.find(command, opposite, 1, true) then
                        response = chatResponses[opposite][math.random(1, #chatResponses[opposite])]
                        break
                    end
                end
            else
                -- Check for opposite prompts (with space)
                for feeling, opposite in pairs(oppositePrompts) do
                    if string.find(command, " " .. opposite, 1, true) then
                        response = chatResponses[opposite][math.random(1, #chatResponses[opposite])]
                        break
                    end
                end

                -- If no specific intent or opposite prompt is found, use the default response
                if not response then
                    response = chatResponses.not_understand[math.random(1, #chatResponses.not_understand)]
                end
            end

            sendChatMessageToChatBot(player, response)
        else
            -- Handle player's response to the chatbot
            if string.sub(lowercaseMessage, 1, #chatBotPrefix + 1) == chatBotPrefix .. " " then
                local playerResponse = string.sub(lowercaseMessage, #chatBotPrefix + 2)
                if lastChatbotResponse then
                    sendChatMessageToChatBot(player, "You said: \"" .. playerResponse .. "\"")
                else
                    sendChatMessageToChatBot(player, "Sorry, I cannot go back further unless you say \"hello\" again.")
                end
            end
        end
    end
end

-- Connect the onChatted function to the Chatted event for all players
for _, player in ipairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(msg)
        onChatted(player, msg)
    end)
end
