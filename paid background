local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local MainFont = Enum.Font.SourceSans
local Level = 1

-- Function to create an autocompleting TextBox
local function AutoCompleteTextBox(Text, Size, AutocompleteCallback)
    local NewTextBox = Instance.new("TextBox")
    NewTextBox.Text = Text
    NewTextBox.Font = MainFont
    NewTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    NewTextBox.BackgroundTransparency = 1
    NewTextBox.TextSize = Size or 12
    NewTextBox.Size = UDim2.new(1, 0, 1, 0)
    NewTextBox.ZIndex = Level

    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Name = "DropdownFrame"
    DropdownFrame.BackgroundTransparency = 0.7
    DropdownFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    DropdownFrame.Size = UDim2.new(1, 0, 0, 100) -- Adjust the dropdown height as needed
    DropdownFrame.Position = UDim2.new(0, 0, 1, 5) -- Position below the textbox
    DropdownFrame.Visible = false
    DropdownFrame.Parent = NewTextBox

    local DropdownListLayout = Instance.new("UIListLayout")
    DropdownListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    DropdownListLayout.Padding = UDim.new(0, 5)
    DropdownListLayout.Parent = DropdownFrame

    local function UpdateDropdown(options)
        DropdownFrame:ClearAllChildren()

        for _, option in pairs(options) do
            local optionButton = Instance.new("TextButton")
            optionButton.Text = option
            optionButton.AutoButtonColor = false
            optionButton.Font = MainFont
            optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            optionButton.BackgroundTransparency = 1
            optionButton.TextSize = Size or 12
            optionButton.Size = UDim2.new(1, 0, 0, 20)
            optionButton.Parent = DropdownFrame

            optionButton.MouseButton1Click:Connect(function()
                NewTextBox.Text = option
                DropdownFrame.Visible = false
                AutocompleteCallback(option) -- Callback with selected option
            end)
        end

        DropdownFrame.Size = UDim2.new(1, 0, 0, math.min(#options * 20, 100))
        DropdownFrame.Visible = #options > 0
    end

    local function FindMatchingPlayers(searchText)
        local options = {}
        local searchTextLower = searchText:lower()

        for _, player in pairs(Players:GetPlayers()) do
            local playerName = player.Name:lower()
            local playerDisplayName = player.DisplayName:lower()

            -- Check if the input text matches or can be completed to the player's username or nickname
            if playerName:match(searchTextLower) or playerDisplayName:match(searchTextLower) then
                table.insert(options, player.Name)
            end
        end

        UpdateDropdown(options)
    end

    NewTextBox:GetPropertyChangedSignal("Text"):Connect(function()
        local searchText = NewTextBox.Text
        FindMatchingPlayers(searchText)
    end)

    return NewTextBox
end

-- Create an autocompleting TextBox
local textBox = AutoCompleteTextBox("", 12, function(selectedOption)
    print("Selected: " .. selectedOption)
end)

textBox.Parent = game.Players.LocalPlayer.PlayerGui.ScreenGui -- Adjust the parent as needed
